
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$frontend-primary: mat.define-palette(mat.$indigo-palette);
$frontend-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);
$custom-primary: mat.define-palette((
  50 : #e1f7fd,
  100: #b3ecfb,
  200: #81dff9,
  300: #4dd2f7,
  400: #26c8f5,
  500: #1abaff, // Your primary color
  600: #17a7e6,
  700: #1492cc,
  800: #117eb3,
  900: #0c6999,
  A100: #ffffff,
  A200: #e1f7fd,
  A400: #26c8f5,
  A700: #1492cc,
  contrast: (
    50 : #000000,
    100: #000000,
    200: #000000,
    300: #000000,
    400: #000000,
    500: #ffffff, // Ensure good contrast for text
    600: #ffffff,
    700: #ffffff,
    800: #ffffff,
    900: #ffffff,
    A100: #000000,
    A200: #000000,
    A400: #000000,
    A700: #ffffff,
  )
));

// The warn palette is optional (defaults to red).
$frontend-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$frontend-theme: mat.define-dark-theme((
  color: (
    primary: $custom-primary,
    accent: $frontend-accent,
    warn: $frontend-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($frontend-theme);

body {
  margin: 0;
  background-color: var(--bg_col_1);

  font-family: Arial, Helvetica, sans-serif;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

body.theme-white {
  --bg_col_1: white;
  --bg_col_2: #d3d3d3;
  --bg_col_nav: #eeeeee;
  --bg_col_login: white;
  --bg_col_dropdown: white;

  --txt_col_title: rgba(0, 0, 0, 0.548);
  --txt_col_1: black;
  --txt_shadow: rgba(0, 0, 0, 0.5);

  --btn-toggle-theme_hover: rgb(226, 226, 226);
  --btn-navbar_hover: #dddddd;
  --btn_col_dd-menu_hover: #dddddd;
}

:root {
  --prim_blue: #1abaff;
  --sec_blue: #0076fd;

  --bg_col_1: #424549;
  --bg_col_2: #282b30;
  --bg_col_nav: #35383c;
  --bg_col_login: #1a1a1a;
  --bg_col_dropdown: #282b30;

  --txt_col_title: white;
  --txt_col_1: white;
  --txt_shadow: var(--prim_blue);

  --btn-border_r: 4px;
  --btn-toggle-theme_hover: rgb(107, 107, 107);
  --btn-navbar_hover: #414141;
  --btn_col_dd-menu_hover: #424549;
}

.btn-propertys {
  background-color: grey;
  color: white;

  text-decoration: none;
  border: none;
  border-radius: var(--btn-border_r);
  font-size: larger;
  font-family: Arial, Helvetica, sans-serif;
  transition: 0.1s ease;
  box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);
}

.text {
  font-family: Arial, Helvetica, sans-serif;
  font-size: 16px;
}

